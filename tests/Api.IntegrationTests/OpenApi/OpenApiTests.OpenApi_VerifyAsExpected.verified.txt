{
  "openapi": "3.0.1",
  "info": {
    "title": "PHA Import Notifications",
    "description": "TBC",
    "contact": {
      "name": "DEFRA",
      "url": "https://www.gov.uk/government/organisations/department-for-environment-food-rural-affairs",
      "email": "tbc@defra.gov.uk"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://integration-test-host"
    }
  ],
  "paths": {
    "/import-notifications": {
      "get": {
        "tags": [
          "Import Notifications"
        ],
        "summary": "Get updated Import Notifications",
        "description": "Get all Import Notifications that have been updated between the time period specified",
        "operationId": "UpdatedImportNotifications",
        "parameters": [
          {
            "name": "bcp",
            "in": "query",
            "description": "Filter import notifications by BCP",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filter import notifications by BCP"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter import notifications updated at this date and time or after this date and time.  Expected value is UTC using format ISO 8601-1:2019",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Filter import notifications updated at this date and time or after this date and time.  Expected value is UTC using format ISO 8601-1:2019",
              "format": "date-time"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Filter import notifications updated before this date and time. Expected value is UTC using format ISO 8601-1:2019. If the time period between From and To is greater than 1 hour then the request will be invalid. Expected value also needs to be in the past by 30 seconds if requesting the current UTC date and time.",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Filter import notifications updated before this date and time. Expected value is UTC using format ISO 8601-1:2019. If the time period between From and To is greater than 1 hour then the request will be invalid. Expected value also needs to be in the past by 30 seconds if requesting the current UTC date and time.",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatedImportNotificationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/import-notifications/{chedReferenceNumber}": {
      "get": {
        "tags": [
          "Import Notifications"
        ],
        "summary": "Get Import Notification",
        "description": "Get an Import Notification by CHED Reference Number",
        "operationId": "ImportNotificationsByChedReferenceNumber",
        "parameters": [
          {
            "name": "chedReferenceNumber",
            "in": "path",
            "description": "CHED Reference Number",
            "required": true,
            "schema": {
              "pattern": "^CHED(?:A|D|P|PP)\\.GB\\.\\d{4}\\.\\d{7}$",
              "type": "string",
              "description": "CHED Reference Number"
            },
            "example": "CHEDA.GB.2024.1020304"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImportNotificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccompanyingDocument": {
        "type": "object",
        "properties": {
          "documentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccompanyingDocumentDocumentTypeEnum"
              }
            ],
            "description": "Additional document type",
            "nullable": true
          },
          "documentReference": {
            "type": "string",
            "description": "Additional document reference",
            "nullable": true
          },
          "documentIssuedOn": {
            "type": "string",
            "description": "Additional document issue date",
            "format": "date-time",
            "nullable": true
          },
          "attachmentId": {
            "type": "string",
            "description": "The UUID used for the uploaded file in blob storage",
            "nullable": true
          },
          "attachmentFilename": {
            "type": "string",
            "description": "The original filename of the uploaded file",
            "nullable": true
          },
          "attachmentContentType": {
            "type": "string",
            "description": "The MIME type of the uploaded file",
            "nullable": true
          },
          "uploadUserId": {
            "type": "string",
            "description": "The UUID for the user that uploaded the file",
            "nullable": true
          },
          "uploadOrganisationId": {
            "type": "string",
            "description": "The UUID for the organisation that the upload user is associated with",
            "nullable": true
          },
          "externalReference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalReference"
              }
            ],
            "description": "External reference of accompanying document, which relates to a downstream service",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccompanyingDocumentDocumentTypeEnum": {
        "enum": [
          "AirWaybill",
          "BillOfLading",
          "CargoManifest",
          "CatchCertificate",
          "CommercialDocument",
          "CommercialInvoice",
          "ConformityCertificate",
          "ContainerManifest",
          "CustomsDeclaration",
          "Docom",
          "HealthCertificate",
          "HeatTreatmentCertificate",
          "ImportPermit",
          "InspectionCertificate",
          "Itahc",
          "JourneyLog",
          "LaboratorySamplingResultsForAflatoxin",
          "LatestVeterinaryHealthCertificate",
          "LetterOfAuthority",
          "LicenseOrAuthorisation",
          "MycotoxinCertification",
          "OriginCertificate",
          "Other",
          "PhytosanitaryCertificate",
          "ProcessingStatement",
          "ProofOfStorage",
          "RailwayBill",
          "SeaWaybill",
          "VeterinaryHealthCertificate",
          "ListOfIngredients",
          "PackingList",
          "RoadConsignmentNote"
        ],
        "type": "string"
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "description": "Street",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "description": "Postal Code",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "description": "1st line of address",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "description": "2nd line of address",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "description": "3rd line of address",
            "nullable": true
          },
          "postalZipCode": {
            "type": "string",
            "description": "Post / zip code",
            "nullable": true
          },
          "countryIsoCode": {
            "type": "string",
            "description": "country 2-digits ISO code",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address",
            "nullable": true
          },
          "ukTelephone": {
            "type": "string",
            "description": "UK phone number",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "Telephone number",
            "nullable": true
          },
          "internationalTelephone": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InternationalTelephone"
              }
            ],
            "description": "International phone number",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Applicant": {
        "type": "object",
        "properties": {
          "laboratory": {
            "type": "string",
            "description": "Name of laboratory",
            "nullable": true
          },
          "laboratoryAddress": {
            "type": "string",
            "description": "Laboratory address",
            "nullable": true
          },
          "laboratoryIdentification": {
            "type": "string",
            "description": "Laboratory identification",
            "nullable": true
          },
          "laboratoryPhoneNumber": {
            "type": "string",
            "description": "Laboratory phone number",
            "nullable": true
          },
          "laboratoryEmail": {
            "type": "string",
            "description": "Laboratory email",
            "nullable": true
          },
          "sampleBatchNumber": {
            "type": "string",
            "description": "Sample batch number",
            "nullable": true
          },
          "analysisType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicantAnalysisTypeEnum"
              }
            ],
            "description": "Type of analysis",
            "nullable": true
          },
          "numberOfSamples": {
            "type": "integer",
            "description": "Number of samples analysed",
            "format": "int32",
            "nullable": true
          },
          "sampleType": {
            "type": "string",
            "description": "Type of sample",
            "nullable": true
          },
          "conservationOfSample": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicantConservationOfSampleEnum"
              }
            ],
            "description": "Conservation of sample",
            "nullable": true
          },
          "inspector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Inspector"
              }
            ],
            "description": "inspector",
            "nullable": true
          },
          "sampledOn": {
            "type": "string",
            "description": "DateTime",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicantAnalysisTypeEnum": {
        "enum": [
          "InitialAnalysis",
          "CounterAnalysis",
          "SecondExpertAnalysis"
        ],
        "type": "string"
      },
      "ApplicantConservationOfSampleEnum": {
        "enum": [
          "Ambient",
          "Chilled",
          "Frozen"
        ],
        "type": "string"
      },
      "ApprovedEstablishment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of approved establishment",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country of approved establishment",
            "nullable": true
          },
          "types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Types of approved establishment",
            "nullable": true
          },
          "approvalNumber": {
            "type": "string",
            "description": "Approval number",
            "nullable": true
          },
          "section": {
            "type": "string",
            "description": "Section of approved establishment",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BillingInformation": {
        "type": "object",
        "properties": {
          "isConfirmed": {
            "type": "boolean",
            "description": "Indicates whether user has confirmed their billing information",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "description": "Billing email address",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "Billing phone number",
            "nullable": true
          },
          "contactName": {
            "type": "string",
            "description": "Billing Contact Name",
            "nullable": true
          },
          "postalAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PostalAddress"
              }
            ],
            "description": "Billing postal address",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CatchCertificateAttachment": {
        "type": "object",
        "properties": {
          "attachmentId": {
            "type": "string",
            "description": "The UUID of the uploaded catch certificate file in blob storage",
            "nullable": true
          },
          "numberOfCatchCertificates": {
            "type": "integer",
            "description": "The total number of catch certificates on the attachment",
            "format": "int32",
            "nullable": true
          },
          "catchCertificateDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatchCertificateDetails"
            },
            "description": "List of catch certificate details",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CatchCertificateDetails": {
        "type": "object",
        "properties": {
          "catchCertificateId": {
            "type": "string",
            "description": "The UUID of the catch certificate",
            "nullable": true
          },
          "catchCertificateReference": {
            "type": "string",
            "description": "Catch certificate reference",
            "nullable": true
          },
          "issuedOn": {
            "type": "string",
            "description": "Catch certificate date of issue",
            "format": "date-time",
            "nullable": true
          },
          "flagState": {
            "type": "string",
            "description": "Catch certificate flag state of catching vessel(s)",
            "nullable": true
          },
          "species": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of species imported under this catch certificate",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Check": {
        "type": "object",
        "properties": {
          "checkCode": {
            "type": "string",
            "nullable": true
          },
          "departmentCode": {
            "type": "string",
            "nullable": true
          },
          "decisionCode": {
            "type": "string",
            "nullable": true
          },
          "decisionsValidUntil": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "decisionReasons": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChedppNotAcceptableReason": {
        "type": "object",
        "properties": {
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChedppNotAcceptableReasonReasonEnum"
              }
            ],
            "description": "reason for refusal",
            "nullable": true
          },
          "commodityOrPackage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChedppNotAcceptableReasonCommodityOrPackageEnum"
              }
            ],
            "description": "commodity or package",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChedppNotAcceptableReasonCommodityOrPackageEnum": {
        "enum": [
          "C",
          "P",
          "Cp"
        ],
        "type": "string"
      },
      "ChedppNotAcceptableReasonReasonEnum": {
        "enum": [
          "DocPhmdm",
          "DocPhmdii",
          "DocPa",
          "DocPic",
          "DocPill",
          "DocPed",
          "DocPmod",
          "DocPfi",
          "DocPnol",
          "DocPcne",
          "DocPadm",
          "DocPadi",
          "DocPpni",
          "DocPf",
          "DocPo",
          "DocNcevd",
          "DocNcpqefi",
          "DocNcpqebec",
          "DocNcts",
          "DocNco",
          "DocOrii",
          "DocOrsr",
          "OriOrrnu",
          "PhyOrpp",
          "PhyOrho",
          "PhyIs",
          "PhyOrsr",
          "OthCnl",
          "OthO"
        ],
        "type": "string"
      },
      "Commodities": {
        "type": "object",
        "properties": {
          "gmsDeclarationAccepted": {
            "type": "boolean",
            "description": "Flag to record when the GMS declaration has been accepted",
            "nullable": true
          },
          "consignedCountryInChargeGroup": {
            "type": "boolean",
            "description": "Flag to record whether the consigned country is in an ipaffs charge group",
            "nullable": true
          },
          "totalGrossWeight": {
            "type": "number",
            "description": "The total gross weight of the consignment.  It must be bigger than the total net weight of the commodities",
            "format": "double",
            "nullable": true
          },
          "totalNetWeight": {
            "type": "number",
            "description": "The total net weight of the commodities within this consignment",
            "format": "double",
            "nullable": true
          },
          "totalGrossVolume": {
            "type": "number",
            "description": "The total gross volume of the commodities within this consignment",
            "format": "double",
            "nullable": true
          },
          "totalGrossVolumeUnit": {
            "type": "string",
            "description": "Unit used for specifying total gross volume of this consignment (litres or metres cubed)",
            "nullable": true
          },
          "numberOfPackages": {
            "type": "integer",
            "description": "The total number of packages within this consignment",
            "format": "int32",
            "nullable": true
          },
          "temperature": {
            "type": "string",
            "description": "Temperature (type) of commodity",
            "nullable": true
          },
          "numberOfAnimals": {
            "type": "integer",
            "description": "The total number of animals within this consignment",
            "format": "int32",
            "nullable": true
          },
          "includeNonAblactedAnimals": {
            "type": "boolean",
            "description": "Does consignment contain ablacted animals",
            "nullable": true
          },
          "countryOfOrigin": {
            "type": "string",
            "description": "Consignments country of origin",
            "nullable": true
          },
          "countryOfOriginIsPodCountry": {
            "type": "boolean",
            "description": "Flag to record whether country of origin is a temporary PoD country",
            "nullable": true
          },
          "isLowRiskArticle72Country": {
            "type": "boolean",
            "description": "Flag to record whether country of origin is a low risk article 72 country",
            "nullable": true
          },
          "regionOfOrigin": {
            "type": "string",
            "description": "Region of country",
            "nullable": true
          },
          "consignedCountry": {
            "type": "string",
            "description": "Country from where commodity was sent",
            "nullable": true
          },
          "animalsCertifiedAs": {
            "type": "string",
            "description": "Certification of animals (Breeding, slaughter etc.)",
            "nullable": true
          },
          "commodityIntendedFor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommoditiesCommodityIntendedForEnum"
              }
            ],
            "description": "What the commodity is intended for",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommoditiesCommodityIntendedForEnum": {
        "enum": [
          "Human",
          "Feedingstuff",
          "Further",
          "Other"
        ],
        "type": "string"
      },
      "CommodityComplement": {
        "type": "object",
        "properties": {
          "uniqueComplementId": {
            "type": "string",
            "description": "UUID used to match commodityComplement to its complementParameter set. CHEDPP only",
            "nullable": true
          },
          "commodityDescription": {
            "type": "string",
            "description": "Description of the commodity",
            "nullable": true
          },
          "commodityId": {
            "type": "string",
            "description": "The unique commodity ID",
            "nullable": true
          },
          "complementId": {
            "type": "integer",
            "description": "Identifier of complement chosen from speciesFamily,speciesClass and speciesType'. This is also used to link to the complementParameterSet",
            "format": "int32",
            "nullable": true
          },
          "complementName": {
            "type": "string",
            "description": "Represents the lowest granularity - either type, class, family or species name - for the commodity selected.  This is also used to drive behaviour for EU Import journeys",
            "nullable": true
          },
          "eppoCode": {
            "type": "string",
            "description": "EPPO Code related to plant commodities and wood packaging",
            "nullable": true
          },
          "isWoodPackaging": {
            "type": "boolean",
            "description": "(Deprecated in IMTA-11832) Is this commodity wood packaging?",
            "nullable": true
          },
          "speciesId": {
            "type": "string",
            "description": "The species ID of the commodity that is imported. Not every commodity has a species ID. This is also used to link to the complementParameterSet. The species ID can change over time",
            "nullable": true
          },
          "speciesName": {
            "type": "string",
            "description": "Species name",
            "nullable": true
          },
          "speciesNomination": {
            "type": "string",
            "description": "Species nomination",
            "nullable": true
          },
          "speciesTypeName": {
            "type": "string",
            "description": "Species type name",
            "nullable": true
          },
          "speciesType": {
            "type": "string",
            "description": "Species type identifier of commodity",
            "nullable": true
          },
          "speciesClassName": {
            "type": "string",
            "description": "Species class name",
            "nullable": true
          },
          "speciesClass": {
            "type": "string",
            "description": "Species class identifier of commodity",
            "nullable": true
          },
          "speciesFamilyName": {
            "type": "string",
            "description": "Species family name of commodity",
            "nullable": true
          },
          "speciesFamily": {
            "type": "string",
            "description": "Species family identifier of commodity",
            "nullable": true
          },
          "speciesCommonName": {
            "type": "string",
            "description": "Species common name of commodity for IMP notification simple commodity selection",
            "nullable": true
          },
          "isCdsMatched": {
            "type": "boolean",
            "description": "Has commodity been matched with corresponding CDS declaration",
            "nullable": true
          },
          "additionalData": {
            "nullable": true
          },
          "riskAssesment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommodityRiskResult"
              }
            ],
            "nullable": true
          },
          "checks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InspectionCheck"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommodityRiskResult": {
        "type": "object",
        "properties": {
          "riskDecision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommodityRiskResultRiskDecisionEnum"
              }
            ],
            "description": "CHED-A, CHED-D, CHED-P - what is the commodity complement risk decision",
            "nullable": true
          },
          "exitRiskDecision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommodityRiskResultExitRiskDecisionEnum"
              }
            ],
            "description": "Transit CHED - what is the commodity complement exit risk decision",
            "nullable": true
          },
          "hmiDecision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommodityRiskResultHmiDecisionEnum"
              }
            ],
            "description": "HMI decision required",
            "nullable": true
          },
          "phsiDecision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommodityRiskResultPhsiDecisionEnum"
              }
            ],
            "description": "PHSI decision required",
            "nullable": true
          },
          "phsiClassification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommodityRiskResultPhsiClassificationEnum"
              }
            ],
            "description": "PHSI classification",
            "nullable": true
          },
          "phsi": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Phsi"
              }
            ],
            "description": "PHSI Decision Breakdown",
            "nullable": true
          },
          "uniqueId": {
            "type": "string",
            "description": "UUID used to match to the complement parameter set",
            "nullable": true
          },
          "eppoCode": {
            "type": "string",
            "description": "EPPO Code for the species",
            "nullable": true
          },
          "variety": {
            "type": "string",
            "description": "Name or ID of the variety",
            "nullable": true
          },
          "propagation": {
            "type": "string",
            "description": "Whether the propagation is considered a Plant, Bulb, Seed or None",
            "nullable": true
          },
          "phsiRuleType": {
            "type": "string",
            "description": "Rule type for PHSI checks",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommodityRiskResultExitRiskDecisionEnum": {
        "enum": [
          "Required",
          "Notrequired",
          "Inconclusive"
        ],
        "type": "string"
      },
      "CommodityRiskResultHmiDecisionEnum": {
        "enum": [
          "Required",
          "Notrequired"
        ],
        "type": "string"
      },
      "CommodityRiskResultPhsiClassificationEnum": {
        "enum": [
          "Mandatory",
          "Reduced",
          "Controlled"
        ],
        "type": "string"
      },
      "CommodityRiskResultPhsiDecisionEnum": {
        "enum": [
          "Required",
          "Notrequired"
        ],
        "type": "string"
      },
      "CommodityRiskResultRiskDecisionEnum": {
        "enum": [
          "Required",
          "Notrequired",
          "Inconclusive",
          "ReenforcedCheck"
        ],
        "type": "string"
      },
      "CommonUserCharge": {
        "type": "object",
        "properties": {
          "wasSentToTradeCharge": {
            "type": "boolean",
            "description": "Indicates whether the last applicable change was successfully send over the interface to Trade Charge",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsignmentCheck": {
        "type": "object",
        "properties": {
          "euStandard": {
            "type": "string",
            "description": "Does it conform EU standards",
            "nullable": true
          },
          "additionalGuarantees": {
            "type": "string",
            "description": "Result of additional guarantees",
            "nullable": true
          },
          "documentCheckResult": {
            "type": "string",
            "description": "Result of document check",
            "nullable": true
          },
          "nationalRequirements": {
            "type": "string",
            "description": "Result of national requirements check",
            "nullable": true
          },
          "identityCheckDone": {
            "type": "boolean",
            "description": "Was identity check done",
            "nullable": true
          },
          "identityCheckType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsignmentCheckIdentityCheckTypeEnum"
              }
            ],
            "description": "Type of identity check performed",
            "nullable": true
          },
          "identityCheckResult": {
            "type": "string",
            "description": "Result of identity check",
            "nullable": true
          },
          "identityCheckNotDoneReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsignmentCheckIdentityCheckNotDoneReasonEnum"
              }
            ],
            "description": "What was the reason for skipping identity check",
            "nullable": true
          },
          "physicalCheckDone": {
            "type": "boolean",
            "description": "Was physical check done",
            "nullable": true
          },
          "physicalCheckResult": {
            "type": "string",
            "description": "Result of physical check",
            "nullable": true
          },
          "physicalCheckNotDoneReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsignmentCheckPhysicalCheckNotDoneReasonEnum"
              }
            ],
            "description": "What was the reason for skipping physical check",
            "nullable": true
          },
          "physicalCheckOtherText": {
            "type": "string",
            "description": "Other reason to not do physical check",
            "nullable": true
          },
          "welfareCheck": {
            "type": "string",
            "description": "Welfare check",
            "nullable": true
          },
          "numberOfAnimalsChecked": {
            "type": "integer",
            "description": "Number of animals checked",
            "format": "int32",
            "nullable": true
          },
          "laboratoryCheckDone": {
            "type": "boolean",
            "description": "Were laboratory tests done",
            "nullable": true
          },
          "laboratoryCheckResult": {
            "type": "string",
            "description": "Result of laboratory tests",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConsignmentCheckIdentityCheckNotDoneReasonEnum": {
        "enum": [
          "ReducedChecksRegime",
          "NotRequired"
        ],
        "type": "string"
      },
      "ConsignmentCheckIdentityCheckTypeEnum": {
        "enum": [
          "SealCheck",
          "FullIdentityCheck",
          "NotDone"
        ],
        "type": "string"
      },
      "ConsignmentCheckPhysicalCheckNotDoneReasonEnum": {
        "enum": [
          "ReducedChecksRegime",
          "Other"
        ],
        "type": "string"
      },
      "ContactDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of designated contact",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "Telephone number of designated contact",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address of designated contact",
            "nullable": true
          },
          "agent": {
            "type": "string",
            "description": "Name of agent representing designated contact",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Control": {
        "type": "object",
        "properties": {
          "feedbackInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FeedbackInformation"
              }
            ],
            "description": "Feedback information of Control",
            "nullable": true
          },
          "detailsOnReExport": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DetailsOnReExport"
              }
            ],
            "description": "Details on re-export",
            "nullable": true
          },
          "officialInspector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OfficialInspector"
              }
            ],
            "description": "Official inspector",
            "nullable": true
          },
          "consignmentLeave": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ControlConsignmentLeaveEnum"
              }
            ],
            "description": "Is the consignment leaving UK borders?",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ControlAuthority": {
        "type": "object",
        "properties": {
          "officialVeterinarian": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OfficialVeterinarian"
              }
            ],
            "description": "Official veterinarian",
            "nullable": true
          },
          "customsReferenceNo": {
            "type": "string",
            "description": "Customs reference number",
            "nullable": true
          },
          "containerResealed": {
            "type": "boolean",
            "description": "Were containers resealed?",
            "nullable": true
          },
          "newSealNumber": {
            "type": "string",
            "description": "When the containers are resealed they need new seal numbers",
            "nullable": true
          },
          "iuuCheckRequired": {
            "type": "boolean",
            "description": "Was Illegal, Unreported and Unregulated (IUU) check required",
            "nullable": true
          },
          "iuuOption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ControlAuthorityIuuOptionEnum"
              }
            ],
            "description": "Result of Illegal, Unreported and Unregulated (IUU) check",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ControlAuthorityIuuOptionEnum": {
        "enum": [
          "Iuuok",
          "Iuuna",
          "IUUNotCompliant"
        ],
        "type": "string"
      },
      "ControlConsignmentLeaveEnum": {
        "enum": [
          "Yes",
          "No",
          "ItHasBeenDestroyed"
        ],
        "type": "string"
      },
      "CustomsClearanceRequest": {
        "type": "object",
        "properties": {
          "header": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Header"
              }
            ],
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Items"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Decision": {
        "type": "object",
        "properties": {
          "consignmentAcceptable": {
            "type": "boolean",
            "description": "Is consignment acceptable or not",
            "nullable": true
          },
          "notAcceptableAction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionNotAcceptableActionEnum"
              }
            ],
            "description": "Filled if consignmentAcceptable is set to false",
            "nullable": true
          },
          "notAcceptableActionDestructionReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionNotAcceptableActionDestructionReasonEnum"
              }
            ],
            "description": "Filled if not acceptable action is set to destruction",
            "nullable": true
          },
          "notAcceptableActionEntryRefusalReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionNotAcceptableActionEntryRefusalReasonEnum"
              }
            ],
            "description": "Filled if not acceptable action is set to entry refusal",
            "nullable": true
          },
          "notAcceptableActionQuarantineImposedReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionNotAcceptableActionQuarantineImposedReasonEnum"
              }
            ],
            "description": "Filled if not acceptable action is set to quarantine imposed",
            "nullable": true
          },
          "notAcceptableActionSpecialTreatmentReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionNotAcceptableActionSpecialTreatmentReasonEnum"
              }
            ],
            "description": "Filled if not acceptable action is set to special treatment",
            "nullable": true
          },
          "notAcceptableActionIndustrialProcessingReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionNotAcceptableActionIndustrialProcessingReasonEnum"
              }
            ],
            "description": "Filled if not acceptable action is set to industrial processing",
            "nullable": true
          },
          "notAcceptableActionReDispatchReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionNotAcceptableActionReDispatchReasonEnum"
              }
            ],
            "description": "Filled if not acceptable action is set to re-dispatch",
            "nullable": true
          },
          "notAcceptableActionUseForOtherPurposesReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionNotAcceptableActionUseForOtherPurposesReasonEnum"
              }
            ],
            "description": "Filled if not acceptable action is set to use for other purposes",
            "nullable": true
          },
          "notAcceptableDestructionReason": {
            "type": "string",
            "description": "Filled when notAcceptableAction is equal to destruction",
            "nullable": true
          },
          "notAcceptableActionOtherReason": {
            "type": "string",
            "description": "Filled when notAcceptableAction is equal to other",
            "nullable": true
          },
          "notAcceptableActionByDate": {
            "type": "string",
            "description": "Filled when consignmentAcceptable is set to false",
            "nullable": true
          },
          "chedppNotAcceptableReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChedppNotAcceptableReason"
            },
            "description": "List of details for individual chedpp not acceptable reasons",
            "nullable": true
          },
          "notAcceptableReasons": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "If the consignment was not accepted what was the reason",
            "nullable": true
          },
          "notAcceptableCountry": {
            "type": "string",
            "description": "2 digits ISO code of country (not acceptable country can be empty)",
            "nullable": true
          },
          "notAcceptableEstablishment": {
            "type": "string",
            "description": "Filled if consignmentAcceptable is set to false",
            "nullable": true
          },
          "notAcceptableOtherReason": {
            "type": "string",
            "description": "Filled if consignmentAcceptable is set to false",
            "nullable": true
          },
          "detailsOfControlledDestinations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Party"
              }
            ],
            "description": "Details of controlled destinations",
            "nullable": true
          },
          "specificWarehouseNonConformingConsignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionSpecificWarehouseNonConformingConsignmentEnum"
              }
            ],
            "description": "Filled if consignment is set to acceptable and decision type is Specific Warehouse",
            "nullable": true
          },
          "temporaryDeadline": {
            "type": "string",
            "description": "Deadline when consignment has to leave borders",
            "nullable": true
          },
          "decisionEnum": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionDecisionEnum"
              }
            ],
            "description": "Detailed decision for consignment",
            "nullable": true
          },
          "freeCirculationPurpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionFreeCirculationPurposeEnum"
              }
            ],
            "description": "Decision over purpose of free circulation in country",
            "nullable": true
          },
          "definitiveImportPurpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionDefinitiveImportPurposeEnum"
              }
            ],
            "description": "Decision over purpose of definitive import",
            "nullable": true
          },
          "ifChanneledOption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DecisionIfChanneledOptionEnum"
              }
            ],
            "description": "Decision channeled option based on (article8, article15)",
            "nullable": true
          },
          "customWarehouseRegisteredNumber": {
            "type": "string",
            "description": "Custom warehouse registered number",
            "nullable": true
          },
          "freeWarehouseRegisteredNumber": {
            "type": "string",
            "description": "Free warehouse registered number",
            "nullable": true
          },
          "shipName": {
            "type": "string",
            "description": "Ship name",
            "nullable": true
          },
          "shipPortOfExit": {
            "type": "string",
            "description": "Port of exit",
            "nullable": true
          },
          "shipSupplierRegisteredNumber": {
            "type": "string",
            "description": "Ship supplier registered number",
            "nullable": true
          },
          "transhipmentBip": {
            "type": "string",
            "description": "Transhipment BIP",
            "nullable": true
          },
          "transhipmentThirdCountry": {
            "type": "string",
            "description": "Transhipment third country",
            "nullable": true
          },
          "transitExitBip": {
            "type": "string",
            "description": "Transit exit BIP",
            "nullable": true
          },
          "transitThirdCountry": {
            "type": "string",
            "description": "Transit third country",
            "nullable": true
          },
          "transitDestinationThirdCountry": {
            "type": "string",
            "description": "Transit destination third country",
            "nullable": true
          },
          "temporaryExitBip": {
            "type": "string",
            "description": "Temporary exit BIP",
            "nullable": true
          },
          "horseReentry": {
            "type": "string",
            "description": "Horse re-entry",
            "nullable": true
          },
          "transhipmentEuOrThirdCountry": {
            "type": "string",
            "description": "Is it transshipped to EU or third country (values EU / country name)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DecisionDecisionEnum": {
        "enum": [
          "NonAcceptable",
          "AcceptableForInternalMarket",
          "AcceptableIfChanneled",
          "AcceptableForTranshipment",
          "AcceptableForTransit",
          "AcceptableForTemporaryImport",
          "AcceptableForSpecificWarehouse",
          "AcceptableForPrivateImport",
          "AcceptableForTransfer",
          "HorseReEntry"
        ],
        "type": "string"
      },
      "DecisionDefinitiveImportPurposeEnum": {
        "enum": [
          "Slaughter",
          "Approvedbodies",
          "Quarantine"
        ],
        "type": "string"
      },
      "DecisionFreeCirculationPurposeEnum": {
        "enum": [
          "AnimalFeedingStuff",
          "HumanConsumption",
          "PharmaceuticalUse",
          "TechnicalUse",
          "FurtherProcess",
          "Other"
        ],
        "type": "string"
      },
      "DecisionIfChanneledOptionEnum": {
        "enum": [
          "Article8",
          "Article15"
        ],
        "type": "string"
      },
      "DecisionNotAcceptableActionDestructionReasonEnum": {
        "enum": [
          "ContaminatedProducts",
          "InterceptedPart",
          "PackagingMaterial",
          "Other"
        ],
        "type": "string"
      },
      "DecisionNotAcceptableActionEntryRefusalReasonEnum": {
        "enum": [
          "ContaminatedProducts",
          "InterceptedPart",
          "PackagingMaterial",
          "MeansOfTransport",
          "Other"
        ],
        "type": "string"
      },
      "DecisionNotAcceptableActionEnum": {
        "enum": [
          "Slaughter",
          "Reexport",
          "Euthanasia",
          "Redispatching",
          "Destruction",
          "Transformation",
          "Other",
          "EntryRefusal",
          "QuarantineImposed",
          "SpecialTreatment",
          "IndustrialProcessing",
          "ReDispatch",
          "UseForOtherPurposes"
        ],
        "type": "string"
      },
      "DecisionNotAcceptableActionIndustrialProcessingReasonEnum": {
        "enum": [
          "ContaminatedProducts",
          "InterceptedPart",
          "PackagingMaterial",
          "Other"
        ],
        "type": "string"
      },
      "DecisionNotAcceptableActionQuarantineImposedReasonEnum": {
        "enum": [
          "ContaminatedProducts",
          "InterceptedPart",
          "PackagingMaterial",
          "Other"
        ],
        "type": "string"
      },
      "DecisionNotAcceptableActionReDispatchReasonEnum": {
        "enum": [
          "ContaminatedProducts",
          "InterceptedPart",
          "PackagingMaterial",
          "MeansOfTransport",
          "Other"
        ],
        "type": "string"
      },
      "DecisionNotAcceptableActionSpecialTreatmentReasonEnum": {
        "enum": [
          "ContaminatedProducts",
          "InterceptedPart",
          "PackagingMaterial",
          "Other"
        ],
        "type": "string"
      },
      "DecisionNotAcceptableActionUseForOtherPurposesReasonEnum": {
        "enum": [
          "ContaminatedProducts",
          "InterceptedPart",
          "PackagingMaterial",
          "MeansOfTransport",
          "Other"
        ],
        "type": "string"
      },
      "DecisionSpecificWarehouseNonConformingConsignmentEnum": {
        "enum": [
          "CustomWarehouse",
          "FreeZoneOrFreeWarehouse",
          "ShipSupplier",
          "Ship"
        ],
        "type": "string"
      },
      "DetailsOnReExport": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Date of re-export",
            "format": "date-time",
            "nullable": true
          },
          "meansOfTransportNo": {
            "type": "string",
            "description": "Number of vehicle",
            "nullable": true
          },
          "transportType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DetailsOnReExportTransportTypeEnum"
              }
            ],
            "description": "Type of transport to be used",
            "nullable": true
          },
          "document": {
            "type": "string",
            "description": "Document issued for re-export",
            "nullable": true
          },
          "countryOfReDispatching": {
            "type": "string",
            "description": "Two letter ISO code for country of re-dispatching",
            "nullable": true
          },
          "exitBip": {
            "type": "string",
            "description": "Exit BIP (where consignment will leave the country)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DetailsOnReExportTransportTypeEnum": {
        "enum": [
          "Rail",
          "Plane",
          "Ship",
          "Road",
          "Other",
          "CShipRoad",
          "CShipRail"
        ],
        "type": "string"
      },
      "Document": {
        "type": "object",
        "properties": {
          "documentCode": {
            "type": "string",
            "nullable": true
          },
          "documentReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EconomicOperator": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of this organisation",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperatorTypeEnum"
              }
            ],
            "description": "Type of organisation",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperatorStatusEnum"
              }
            ],
            "description": "Status of organisation",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Name of organisation",
            "nullable": true
          },
          "individualName": {
            "type": "string",
            "description": "Individual name",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "description": "Address of economic operator",
            "nullable": true
          },
          "approvalNumber": {
            "type": "string",
            "description": "Approval Number which identifies an Economic Operator unambiguously per type of organisation per country.",
            "nullable": true
          },
          "otherIdentifier": {
            "type": "string",
            "description": "Optional Business General Number, often named Aggregation Code, which identifies an Economic Operator.",
            "nullable": true
          },
          "tracesId": {
            "type": "integer",
            "description": "Traces Id of the economic operator generated by IPAFFS",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EconomicOperatorStatusEnum": {
        "enum": [
          "Approved",
          "Nonapproved",
          "Suspended"
        ],
        "type": "string"
      },
      "EconomicOperatorTypeEnum": {
        "enum": [
          "Consignee",
          "Destination",
          "Exporter",
          "Importer",
          "Charity",
          "CommercialTransporter",
          "CommercialTransporterUserAdded",
          "PrivateTransporter",
          "TemporaryAddress",
          "PremisesOfOrigin",
          "OrganisationBranchAddress",
          "Packer",
          "Pod"
        ],
        "type": "string"
      },
      "ExternalReference": {
        "type": "object",
        "properties": {
          "system": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalReferenceSystemEnum"
              }
            ],
            "description": "Identifier of the external system to which the reference relates",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "description": "Reference which is added to the notification when either sent to the downstream system or received from it",
            "nullable": true
          },
          "exactMatch": {
            "type": "boolean",
            "description": "Details whether there's an exact match between the external source and IPAFFS data",
            "nullable": true
          },
          "verifiedByImporter": {
            "type": "boolean",
            "description": "Details whether an importer has verified the data from an external source",
            "nullable": true
          },
          "verifiedByInspector": {
            "type": "boolean",
            "description": "Details whether an inspector has verified the data from an external source",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExternalReferenceSystemEnum": {
        "enum": [
          "Ecert",
          "Ephyto",
          "Enotification",
          "Ncts"
        ],
        "type": "string"
      },
      "FeedbackInformation": {
        "type": "object",
        "properties": {
          "authorityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FeedbackInformationAuthorityTypeEnum"
              }
            ],
            "description": "Type of authority",
            "nullable": true
          },
          "consignmentArrival": {
            "type": "boolean",
            "description": "Did the consignment arrive",
            "nullable": true
          },
          "consignmentConformity": {
            "type": "boolean",
            "description": "Does the consignment conform",
            "nullable": true
          },
          "consignmentNoArrivalReason": {
            "type": "string",
            "description": "Reason for consignment not arriving at the entry point",
            "nullable": true
          },
          "destructionDate": {
            "type": "string",
            "description": "Date of consignment destruction",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeedbackInformationAuthorityTypeEnum": {
        "enum": [
          "Exitbip",
          "Finalbip",
          "Localvetunit",
          "Inspunit"
        ],
        "type": "string"
      },
      "Header": {
        "type": "object",
        "properties": {
          "entryReference": {
            "type": "string",
            "nullable": true
          },
          "entryVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "previousVersionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "arrivesAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dispatchCountryCode": {
            "type": "string",
            "nullable": true
          },
          "goodsLocationCode": {
            "type": "string",
            "nullable": true
          },
          "decisionNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImpactOfTransportOnAnimals": {
        "type": "object",
        "properties": {
          "numberOfDeadAnimals": {
            "type": "integer",
            "description": "Number of dead animals specified by units",
            "format": "int32",
            "nullable": true
          },
          "numberOfDeadAnimalsUnit": {
            "type": "string",
            "description": "Unit used for specifying number of dead animals (percent or units)",
            "nullable": true
          },
          "numberOfUnfitAnimals": {
            "type": "integer",
            "description": "Number of unfit animals",
            "format": "int32",
            "nullable": true
          },
          "numberOfUnfitAnimalsUnit": {
            "type": "string",
            "description": "Unit used for specifying number of unfit animals (percent or units)",
            "nullable": true
          },
          "numberOfBirthOrAbortion": {
            "type": "integer",
            "description": "Number of births or abortions (unit)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportNotificationResponse": {
        "required": [
          "created",
          "updated"
        ],
        "type": "object",
        "properties": {
          "clearanceRequests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomsClearanceRequest"
            },
            "nullable": true
          },
          "clearanceDecisions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomsClearanceRequest"
            },
            "nullable": true
          },
          "createdSource": {
            "type": "string",
            "description": "Date when the notification was created in IPAFFS",
            "format": "date-time",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "Date when the notification was created",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Date when the notification was last updated",
            "format": "date-time"
          },
          "commoditiesSummary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Commodities"
              }
            ],
            "nullable": true
          },
          "commodities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommodityComplement"
            },
            "nullable": true
          },
          "ipaffsId": {
            "type": "integer",
            "description": "The IPAFFS ID number for this notification.",
            "format": "int32",
            "nullable": true
          },
          "etag": {
            "type": "string",
            "description": "The etag for this notification.",
            "nullable": true
          },
          "externalReferences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalReference"
            },
            "description": "List of external references, which relate to downstream services",
            "nullable": true
          },
          "referenceNumber": {
            "type": "string",
            "description": "Reference number of the notification",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "description": "Current version of the notification",
            "format": "int32",
            "nullable": true
          },
          "updatedSource": {
            "type": "string",
            "description": "Date when the notification was last updated in IPAFFS",
            "format": "date-time",
            "nullable": true
          },
          "lastUpdatedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInformation"
              }
            ],
            "description": "User entity whose update was last",
            "nullable": true
          },
          "importNotificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImportNotificationTypeEnum"
              }
            ],
            "description": "The Type of notification that has been submitted",
            "nullable": true
          },
          "replaces": {
            "type": "string",
            "description": "Reference number of notification that was replaced by this one",
            "nullable": true
          },
          "replacedBy": {
            "type": "string",
            "description": "Reference number of notification that replaced this one",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImportNotificationStatusEnum"
              }
            ],
            "description": "Current status of the notification. When created by an importer, the notification has the status 'SUBMITTED'. Before submission of the notification it has the status 'DRAFT'. When the BIP starts validation of the notification it has the status 'IN PROGRESS' Once the BIP validates the notification, it gets the status 'VALIDATED'. 'AMEND' is set when the Part-1 user is modifying the notification. 'MODIFY' is set when Part-2 user is modifying the notification. Replaced - When the notification is replaced by another notification. Rejected - Notification moves to Rejected status when rejected by a Part-2 user. ",
            "nullable": true
          },
          "splitConsignment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SplitConsignment"
              }
            ],
            "description": "Present if the consignment has been split",
            "nullable": true
          },
          "childNotification": {
            "type": "boolean",
            "description": "Is this notification a child of a split consignment?",
            "nullable": true
          },
          "riskAssessment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RiskAssessmentResult"
              }
            ],
            "description": "Result of risk assessment by the risk scorer",
            "nullable": true
          },
          "journeyRiskCategorisation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JourneyRiskCategorisationResult"
              }
            ],
            "description": "Details of the risk categorisation level for a notification",
            "nullable": true
          },
          "isHighRiskEuImport": {
            "type": "boolean",
            "description": "Is this notification a high risk notification from the EU/EEA?",
            "nullable": true
          },
          "partOne": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartOne"
              }
            ],
            "nullable": true
          },
          "decisionBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInformation"
              }
            ],
            "description": "Information about the user who set the decision in Part 2",
            "nullable": true
          },
          "decisionDate": {
            "type": "string",
            "description": "Date when the notification was validated or rejected",
            "nullable": true
          },
          "partTwo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartTwo"
              }
            ],
            "description": "Part of the notification which contains information filled by inspector at BIP/DPE",
            "nullable": true
          },
          "partThree": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartThree"
              }
            ],
            "description": "Part of the notification which contains information filled by LVU if control of consignment is needed.",
            "nullable": true
          },
          "officialVeterinarian": {
            "type": "string",
            "description": "Official veterinarian",
            "nullable": true
          },
          "consignmentValidations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationMessageCode"
            },
            "description": "Validation messages for whole notification",
            "nullable": true
          },
          "agencyOrganisationId": {
            "type": "string",
            "description": "Organisation id which the agent user belongs to, stored against each notification which has been raised on behalf of another organisation",
            "nullable": true
          },
          "riskDecisionLockedOn": {
            "type": "string",
            "description": "Date and Time when risk decision was locked",
            "format": "date-time",
            "nullable": true
          },
          "isRiskDecisionLocked": {
            "type": "boolean",
            "description": "is the risk decision locked?",
            "nullable": true
          },
          "requestId": {
            "type": "string",
            "description": "Request UUID to trace bulk upload",
            "nullable": true
          },
          "isCdsFullMatched": {
            "type": "boolean",
            "description": "Have all commodities been matched with corresponding CDS declaration(s)",
            "nullable": true
          },
          "chedTypeVersion": {
            "type": "integer",
            "description": "The version of the ched type the notification was created with",
            "format": "int32",
            "nullable": true
          },
          "isGMRMatched": {
            "type": "boolean",
            "description": "Indicates whether a CHED has been matched with a GVMS GMR via DMP",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImportNotificationStatusEnum": {
        "enum": [
          "Submitted",
          "Validated",
          "Rejected",
          "InProgress",
          "Amend",
          "Modify",
          "Replaced",
          "Cancelled",
          "Deleted",
          "PartiallyRejected",
          "SplitConsignment"
        ],
        "type": "string"
      },
      "ImportNotificationTypeEnum": {
        "enum": [
          "Cveda",
          "Cvedp",
          "Chedpp",
          "Ced"
        ],
        "type": "string"
      },
      "InspectionCheck": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InspectionCheckTypeEnum"
              }
            ],
            "description": "Type of check",
            "nullable": true
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InspectionCheckStatusEnum"
              }
            ],
            "description": "Status of the check",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "Reason for the status if applicable",
            "nullable": true
          },
          "otherReason": {
            "type": "string",
            "description": "Other reason text when selected reason is 'Other'",
            "nullable": true
          },
          "isSelectedForChecks": {
            "type": "boolean",
            "description": "Has commodity been selected for checks?",
            "nullable": true
          },
          "hasChecksComplete": {
            "type": "boolean",
            "description": "Has commodity completed this type of check",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InspectionCheckStatusEnum": {
        "enum": [
          "ToDo",
          "Compliant",
          "AutoCleared",
          "NonCompliant",
          "NotInspected",
          "ToBeInspected",
          "Hold"
        ],
        "type": "string"
      },
      "InspectionCheckTypeEnum": {
        "enum": [
          "PhsiDocument",
          "PhsiIdentity",
          "PhsiPhysical",
          "Hmi"
        ],
        "type": "string"
      },
      "InspectionOverride": {
        "type": "object",
        "properties": {
          "originalDecision": {
            "type": "string",
            "description": "Original inspection decision",
            "nullable": true
          },
          "overriddenOn": {
            "type": "string",
            "description": "The time the risk decision is overridden",
            "format": "date-time",
            "nullable": true
          },
          "overriddenBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInformation"
              }
            ],
            "description": "User entity who has manually overridden the inspection",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InspectionRequiredEnum": {
        "enum": [
          "Required",
          "Inconclusive",
          "NotRequired"
        ],
        "type": "string"
      },
      "Inspector": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of inspector",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone number of inspector",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address of inspector",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InternationalTelephone": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "description": "Country code of phone number",
            "nullable": true
          },
          "subscriberNumber": {
            "type": "string",
            "description": "Phone number",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Items": {
        "type": "object",
        "properties": {
          "itemNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "customsProcedureCode": {
            "type": "string",
            "nullable": true
          },
          "taricCommodityCode": {
            "type": "string",
            "nullable": true
          },
          "goodsDescription": {
            "type": "string",
            "nullable": true
          },
          "consigneeId": {
            "type": "string",
            "nullable": true
          },
          "consigneeName": {
            "type": "string",
            "nullable": true
          },
          "itemNetMass": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "itemSupplementaryUnits": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "itemThirdQuantity": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "itemOriginCountryCode": {
            "type": "string",
            "nullable": true
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            },
            "nullable": true
          },
          "checks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Check"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JourneyRiskCategorisationResult": {
        "type": "object",
        "properties": {
          "riskLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JourneyRiskCategorisationResultRiskLevelEnum"
              }
            ],
            "description": "Risk Level is defined using enum values High,Medium,Low",
            "nullable": true
          },
          "riskLevelMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JourneyRiskCategorisationResultRiskLevelMethodEnum"
              }
            ],
            "description": "Indicator of whether the risk level was determined by the system or by the user",
            "nullable": true
          },
          "riskLevelSetFor": {
            "type": "string",
            "description": "The date and time the risk level has been set for a notification",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JourneyRiskCategorisationResultRiskLevelEnum": {
        "enum": [
          "High",
          "Medium",
          "Low"
        ],
        "type": "string"
      },
      "JourneyRiskCategorisationResultRiskLevelMethodEnum": {
        "enum": [
          "System",
          "User"
        ],
        "type": "string"
      },
      "LaboratoryTestResult": {
        "type": "object",
        "properties": {
          "sampleUseByDate": {
            "type": "string",
            "description": "When sample was used",
            "nullable": true
          },
          "releasedOn": {
            "type": "string",
            "description": "When it was released",
            "format": "date-time",
            "nullable": true
          },
          "laboratoryTestMethod": {
            "type": "string",
            "description": "Laboratory test method",
            "nullable": true
          },
          "results": {
            "type": "string",
            "description": "Result of test",
            "nullable": true
          },
          "conclusion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaboratoryTestResultConclusionEnum"
              }
            ],
            "description": "Conclusion of laboratory test",
            "nullable": true
          },
          "labTestCreatedOn": {
            "type": "string",
            "description": "Date of lab test created in IPAFFS",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LaboratoryTestResultConclusionEnum": {
        "enum": [
          "Satisfactory",
          "NotSatisfactory",
          "NotInterpretable",
          "Pending"
        ],
        "type": "string"
      },
      "LaboratoryTests": {
        "type": "object",
        "properties": {
          "testedOn": {
            "type": "string",
            "description": "Date of tests",
            "format": "date-time",
            "nullable": true
          },
          "testReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaboratoryTestsTestReasonEnum"
              }
            ],
            "description": "Reason for test",
            "nullable": true
          },
          "singleLaboratoryTests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SingleLaboratoryTest"
            },
            "description": "List of details of individual tests performed or to be performed",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LaboratoryTestsTestReasonEnum": {
        "enum": [
          "Random",
          "Suspicious",
          "ReEnforced",
          "IntensifiedControls",
          "Required",
          "LatentInfectionSampling"
        ],
        "type": "string"
      },
      "MeansOfTransport": {
        "type": "object",
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeansOfTransportTypeEnum"
              }
            ],
            "description": "Type of transport",
            "nullable": true
          },
          "document": {
            "type": "string",
            "description": "Document for transport",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "ID of transport",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeansOfTransportTypeEnum": {
        "enum": [
          "Aeroplane",
          "RoadVehicle",
          "RailwayWagon",
          "Ship",
          "Other",
          "RoadVehicleAeroplane",
          "ShipRailwayWagon",
          "ShipRoadVehicle"
        ],
        "type": "string"
      },
      "NominatedContact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of nominated contact",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address of nominated contact",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "Telephone number of nominated contact",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OfficialInspector": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name of inspector",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name of inspector",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email of inspector",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone number of inspector",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "Fax number of inspector",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Address"
              }
            ],
            "description": "Address of inspector",
            "nullable": true
          },
          "signed": {
            "type": "string",
            "description": "Date of sign",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OfficialVeterinarian": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "First name of official veterinarian",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "Last name of official veterinarian",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email address of official veterinarian",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone number of official veterinarian",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "Fax number of official veterinarian",
            "nullable": true
          },
          "signed": {
            "type": "string",
            "description": "Date of sign",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartOne": {
        "type": "object",
        "properties": {
          "personResponsible": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Party"
              }
            ],
            "description": "The individual who has submitted the notification",
            "nullable": true
          },
          "consignmentArrived": {
            "type": "boolean",
            "description": "Has the consignment arrived at the BCP?",
            "nullable": true
          },
          "consignor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperator"
              }
            ],
            "description": "Person or Company that sends shipment",
            "nullable": true
          },
          "packer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperator"
              }
            ],
            "description": "Person or Company that packs the shipment",
            "nullable": true
          },
          "consignee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperator"
              }
            ],
            "description": "Person or Company that receives shipment",
            "nullable": true
          },
          "importer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperator"
              }
            ],
            "description": "Person or Company that is importing the consignment",
            "nullable": true
          },
          "placeOfDestination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperator"
              }
            ],
            "description": "Where the shipment is to be sent? For IMP minimum 48 hour accommodation/holding location.",
            "nullable": true
          },
          "pod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperator"
              }
            ],
            "description": "A temporary place of destination for plants",
            "nullable": true
          },
          "cphNumber": {
            "type": "string",
            "description": "Charity Parish Holding number",
            "nullable": true
          },
          "isCatchCertificateRequired": {
            "type": "boolean",
            "description": "Is this catch certificate required?",
            "nullable": true
          },
          "isGvmsRoute": {
            "type": "boolean",
            "description": "Is GVMS route?",
            "nullable": true
          },
          "purpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Purpose"
              }
            ],
            "description": "Purpose of consignment details",
            "nullable": true
          },
          "pointOfEntry": {
            "type": "string",
            "description": "Either a Border-Inspection-Post or Designated-Point-Of-Entry, e.g. GBFXT1",
            "nullable": true
          },
          "pointOfEntryControlPoint": {
            "type": "string",
            "description": "A control point at the point of entry",
            "nullable": true
          },
          "meansOfTransport": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeansOfTransport"
              }
            ],
            "description": "How consignment is transported after BIP",
            "nullable": true
          },
          "transporter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperator"
              }
            ],
            "description": "Transporter of consignment details",
            "nullable": true
          },
          "transporterDetailsRequired": {
            "type": "boolean",
            "description": "Are transporter details required for this consignment",
            "nullable": true
          },
          "meansOfTransportFromEntryPoint": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeansOfTransport"
              }
            ],
            "description": "Transport to BIP",
            "nullable": true
          },
          "estimatedJourneyTimeInMinutes": {
            "type": "number",
            "description": "Estimated journey time in minutes to point of entry",
            "format": "double",
            "nullable": true
          },
          "veterinaryInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VeterinaryInformation"
              }
            ],
            "description": "Part 1 - Holds the information related to veterinary checks and details",
            "nullable": true
          },
          "importerLocalReferenceNumber": {
            "type": "string",
            "description": "Reference number added by the importer",
            "nullable": true
          },
          "route": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Route"
              }
            ],
            "description": "Contains countries and transfer points that consignment is going through",
            "nullable": true
          },
          "submittedOn": {
            "type": "string",
            "description": "Date and time when the notification was submitted",
            "format": "date-time",
            "nullable": true
          },
          "submittedBy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserInformation"
              }
            ],
            "description": "Information about user who submitted notification",
            "nullable": true
          },
          "consignmentValidations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationMessageCode"
            },
            "description": "Validation messages for whole notification",
            "nullable": true
          },
          "portOfEntry": {
            "type": "string",
            "description": "Entry port for EU Import notification.",
            "nullable": true
          },
          "portOfExit": {
            "type": "string",
            "description": "Exit Port for EU Import Notification.",
            "nullable": true
          },
          "exitedPortOfOn": {
            "type": "string",
            "description": "Date of Port Exit for EU Import Notification.",
            "format": "date-time",
            "nullable": true
          },
          "contactDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContactDetails"
              }
            ],
            "description": "Person to be contacted if there is an issue with the consignment",
            "nullable": true
          },
          "nominatedContacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NominatedContact"
            },
            "description": "List of nominated contacts to receive text and email notifications",
            "nullable": true
          },
          "originalEstimatedOn": {
            "type": "string",
            "description": "Original estimated date time of arrival",
            "format": "date-time",
            "nullable": true
          },
          "billingInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BillingInformation"
              }
            ],
            "nullable": true
          },
          "isChargeable": {
            "type": "boolean",
            "description": "Indicates whether CUC applies to the notification",
            "nullable": true
          },
          "wasChargeable": {
            "type": "boolean",
            "description": "Indicates whether CUC previously applied to the notification",
            "nullable": true
          },
          "commonUserCharge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CommonUserCharge"
              }
            ],
            "nullable": true
          },
          "provideCtcMrn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartOneProvideCtcMrnEnum"
              }
            ],
            "description": "When the NCTS MRN will be added for the Common Transit Convention (CTC)",
            "nullable": true
          },
          "arrivesAt": {
            "type": "string",
            "description": "DateTime",
            "format": "date-time",
            "nullable": true
          },
          "departedOn": {
            "type": "string",
            "description": "DateTime",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartOneProvideCtcMrnEnum": {
        "enum": [
          "Yes",
          "YesAddLater",
          "No"
        ],
        "type": "string"
      },
      "PartThree": {
        "type": "object",
        "properties": {
          "controlStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartThreeControlStatusEnum"
              }
            ],
            "description": "Control status enum",
            "nullable": true
          },
          "control": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Control"
              }
            ],
            "description": "Control details",
            "nullable": true
          },
          "consignmentValidations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationMessageCode"
            },
            "description": "Validation messages for Part 3 - Control",
            "nullable": true
          },
          "sealCheckRequired": {
            "type": "boolean",
            "description": "Is the seal check required",
            "nullable": true
          },
          "sealCheck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SealCheck"
              }
            ],
            "description": "Seal check details",
            "nullable": true
          },
          "sealCheckOverride": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InspectionOverride"
              }
            ],
            "description": "Seal check override details",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartThreeControlStatusEnum": {
        "enum": [
          "Required",
          "Completed"
        ],
        "type": "string"
      },
      "PartTwo": {
        "type": "object",
        "properties": {
          "decision": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Decision"
              }
            ],
            "description": "Decision on the consignment",
            "nullable": true
          },
          "consignmentCheck": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsignmentCheck"
              }
            ],
            "description": "Consignment check",
            "nullable": true
          },
          "impactOfTransportOnAnimals": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImpactOfTransportOnAnimals"
              }
            ],
            "description": "Checks of impact of transport on animals",
            "nullable": true
          },
          "laboratoryTestsRequired": {
            "type": "boolean",
            "description": "Are laboratory tests required",
            "nullable": true
          },
          "laboratoryTests": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaboratoryTests"
              }
            ],
            "description": "Laboratory tests information details",
            "nullable": true
          },
          "resealedContainersIncluded": {
            "type": "boolean",
            "description": "Are the containers resealed",
            "nullable": true
          },
          "resealedContainersMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SealContainer"
            },
            "description": "Resealed containers information details",
            "nullable": true
          },
          "controlAuthority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ControlAuthority"
              }
            ],
            "description": "Control Authority information details",
            "nullable": true
          },
          "controlledDestination": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EconomicOperator"
              }
            ],
            "description": "Controlled destination",
            "nullable": true
          },
          "bipLocalReferenceNumber": {
            "type": "string",
            "description": "Local reference number at BIP",
            "nullable": true
          },
          "signedOnBehalfOf": {
            "type": "string",
            "description": "Part 2 - Sometimes other user can sign decision on behalf of another user",
            "nullable": true
          },
          "onwardTransportation": {
            "type": "string",
            "description": "Onward transportation",
            "nullable": true
          },
          "consignmentValidations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationMessageCode"
            },
            "description": "Validation messages for Part 2 - Decision",
            "nullable": true
          },
          "checkedOn": {
            "type": "string",
            "description": "User entered date when the checks were completed",
            "format": "date-time",
            "nullable": true
          },
          "accompanyingDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccompanyingDocument"
            },
            "description": "Accompanying documents",
            "nullable": true
          },
          "phsiAutoCleared": {
            "type": "boolean",
            "description": "Have the PHSI regulated commodities been auto cleared?",
            "nullable": true
          },
          "hmiAutoCleared": {
            "type": "boolean",
            "description": "Have the HMI regulated commodities been auto cleared?",
            "nullable": true
          },
          "inspectionRequired": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InspectionRequiredEnum"
              }
            ],
            "description": "Inspection required",
            "nullable": true
          },
          "inspectionOverride": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InspectionOverride"
              }
            ],
            "description": "Details about the manual inspection override",
            "nullable": true
          },
          "autoClearedOn": {
            "type": "string",
            "description": "Date of autoclearance",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Party": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "IPAFFS ID of party",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of party",
            "nullable": true
          },
          "companyId": {
            "type": "string",
            "description": "Company ID",
            "nullable": true
          },
          "contactId": {
            "type": "string",
            "description": "Contact ID (B2C)",
            "nullable": true
          },
          "companyName": {
            "type": "string",
            "description": "Company name",
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Addresses",
            "nullable": true
          },
          "county": {
            "type": "string",
            "description": "County",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "description": "Post code of party",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Country of party",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "City",
            "nullable": true
          },
          "tracesId": {
            "type": "integer",
            "description": "TRACES ID",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PartyTypeEnum"
              }
            ],
            "description": "Type of party",
            "nullable": true
          },
          "approvalNumber": {
            "type": "string",
            "description": "Approval number",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Phone number of party",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "Fax number of party",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Email number of party",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PartyTypeEnum": {
        "enum": [
          "CommercialTransporter",
          "PrivateTransporter"
        ],
        "type": "string"
      },
      "Phsi": {
        "type": "object",
        "properties": {
          "documentCheck": {
            "type": "boolean",
            "description": "Whether or not a documentary check is required for PHSI",
            "nullable": true
          },
          "identityCheck": {
            "type": "boolean",
            "description": "Whether or not an identity check is required for PHSI",
            "nullable": true
          },
          "physicalCheck": {
            "type": "boolean",
            "description": "Whether or not a physical check is required for PHSI",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostalAddress": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "1st line of address",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "description": "2nd line of address",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "description": "3rd line of address",
            "nullable": true
          },
          "addressLine4": {
            "type": "string",
            "description": "4th line of address",
            "nullable": true
          },
          "county": {
            "type": "string",
            "description": "3rd line of address",
            "nullable": true
          },
          "cityOrTown": {
            "type": "string",
            "description": "City or town name",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "description": "Post code",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "Purpose": {
        "type": "object",
        "properties": {
          "conformsToEU": {
            "type": "boolean",
            "description": "Does consignment conforms to UK laws",
            "nullable": true
          },
          "internalMarketPurpose": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PurposeInternalMarketPurposeEnum"
              }
            ],
            "description": "Detailed purpose of internal market purpose group",
            "nullable": true
          },
          "thirdCountryTranshipment": {
            "type": "string",
            "description": "Country that consignment is transshipped through",
            "nullable": true
          },
          "forNonConforming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PurposeForNonConformingEnum"
              }
            ],
            "description": "Detailed purpose for non conforming purpose group",
            "nullable": true
          },
          "regNumber": {
            "type": "string",
            "description": "There are 3 types of registration number based on the purpose of consignment. Customs registration number, Free zone registration number and Shipping supplier registration number.",
            "nullable": true
          },
          "shipName": {
            "type": "string",
            "description": "Ship name",
            "nullable": true
          },
          "shipPort": {
            "type": "string",
            "description": "Destination Ship port",
            "nullable": true
          },
          "exitBip": {
            "type": "string",
            "description": "Exit Border Inspection Post",
            "nullable": true
          },
          "thirdCountry": {
            "type": "string",
            "description": "Country to which consignment is transited",
            "nullable": true
          },
          "transitThirdCountries": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Countries that consignment is transited through",
            "nullable": true
          },
          "forImportOrAdmission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PurposeForImportOrAdmissionEnum"
              }
            ],
            "description": "Specification of Import or admission purpose",
            "nullable": true
          },
          "exitDate": {
            "type": "string",
            "description": "Exit date when import or admission",
            "nullable": true
          },
          "finalBip": {
            "type": "string",
            "description": "Final Border Inspection Post",
            "nullable": true
          },
          "purposeGroup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PurposePurposeGroupEnum"
              }
            ],
            "description": "Purpose group of consignment (general purpose)",
            "nullable": true
          },
          "estimatedArrivesAtPortOfExit": {
            "type": "string",
            "description": "DateTime",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PurposeForImportOrAdmissionEnum": {
        "enum": [
          "DefinitiveImport",
          "HorsesReEntry",
          "TemporaryAdmissionHorses"
        ],
        "type": "string"
      },
      "PurposeForNonConformingEnum": {
        "enum": [
          "CustomsWarehouse",
          "FreeZoneOrFreeWarehouse",
          "ShipSupplier",
          "Ship"
        ],
        "type": "string"
      },
      "PurposeInternalMarketPurposeEnum": {
        "enum": [
          "AnimalFeedingStuff",
          "HumanConsumption",
          "PharmaceuticalUse",
          "TechnicalUse",
          "Other",
          "CommercialSale",
          "CommercialSaleOrChangeOfOwnership",
          "Rescue",
          "Breeding",
          "Research",
          "RacingOrCompetition",
          "ApprovedPremisesOrBody",
          "CompanionAnimalNotForResaleOrRehoming",
          "Production",
          "Slaughter",
          "Fattening",
          "GameRestocking",
          "RegisteredHorses"
        ],
        "type": "string"
      },
      "PurposePurposeGroupEnum": {
        "enum": [
          "ForImport",
          "ForNONConformingConsignments",
          "ForTranshipmentTo",
          "ForTransitTo3rdCountry",
          "ForReImport",
          "ForPrivateImport",
          "ForTransferTo",
          "ForImportReConformityCheck",
          "ForImportNonInternalMarket"
        ],
        "type": "string"
      },
      "RiskAssessmentResult": {
        "type": "object",
        "properties": {
          "commodityResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommodityRiskResult"
            },
            "description": "List of risk assessed commodities",
            "nullable": true
          },
          "assessedOn": {
            "type": "string",
            "description": "Date and time of assessment",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Route": {
        "type": "object",
        "properties": {
          "transitingStates": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SealCheck": {
        "type": "object",
        "properties": {
          "satisfactory": {
            "type": "boolean",
            "description": "Is seal check satisfactory",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "reason for not satisfactory",
            "nullable": true
          },
          "officialInspector": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OfficialInspector"
              }
            ],
            "description": "Official inspector",
            "nullable": true
          },
          "checkedOn": {
            "type": "string",
            "description": "date and time of seal check",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SealContainer": {
        "type": "object",
        "properties": {
          "sealNumber": {
            "type": "string",
            "nullable": true
          },
          "containerNumber": {
            "type": "string",
            "nullable": true
          },
          "officialSeal": {
            "type": "boolean",
            "nullable": true
          },
          "resealedSealNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SingleLaboratoryTest": {
        "type": "object",
        "properties": {
          "commodityCode": {
            "type": "string",
            "description": "Commodity code for which lab test was ordered",
            "nullable": true
          },
          "speciesId": {
            "type": "integer",
            "description": "Species id of commodity for which lab test was ordered",
            "format": "int32",
            "nullable": true
          },
          "tracesId": {
            "type": "integer",
            "description": "TRACES ID",
            "format": "int32",
            "nullable": true
          },
          "testName": {
            "type": "string",
            "description": "Test name",
            "nullable": true
          },
          "applicant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Applicant"
              }
            ],
            "description": "Laboratory tests information details and information about laboratory",
            "nullable": true
          },
          "laboratoryTestResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LaboratoryTestResult"
              }
            ],
            "description": "Information about results of test",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SplitConsignment": {
        "type": "object",
        "properties": {
          "validReferenceNumber": {
            "type": "string",
            "description": "Reference number of the valid split consignment",
            "nullable": true
          },
          "rejectedReferenceNumber": {
            "type": "string",
            "description": "Reference number of the rejected split consignment",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdatedImportNotification": {
        "required": [
          "links",
          "referenceNumber",
          "updated"
        ],
        "type": "object",
        "properties": {
          "updated": {
            "type": "string",
            "description": "Date last updated. Format is ISO 8601-1:2019",
            "format": "date-time"
          },
          "referenceNumber": {
            "minLength": 1,
            "pattern": "^CHED(?:A|D|P|PP)\\.GB\\.\\d{4}\\.\\d{7}$",
            "type": "string",
            "description": "CHED Reference Number"
          },
          "links": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdatedImportNotificationLinks"
              }
            ],
            "description": "Links"
          }
        },
        "additionalProperties": false
      },
      "UpdatedImportNotificationLinks": {
        "required": [
          "importNotification"
        ],
        "type": "object",
        "properties": {
          "importNotification": {
            "pattern": "^/import-notifications/CHED(?:A|D|P|PP)\\.GB\\.\\d{4}\\.\\d{7}$",
            "type": "string",
            "description": "Relative path to import notification",
            "format": "uri",
            "example": "/import-notifications/CHEDA.GB.2024.1020304"
          }
        },
        "additionalProperties": false
      },
      "UpdatedImportNotificationsResponse": {
        "required": [
          "importNotifications"
        ],
        "type": "object",
        "properties": {
          "importNotifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdatedImportNotification"
            },
            "description": "Import Notifications"
          }
        },
        "additionalProperties": false
      },
      "UserInformation": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "description": "Display name",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "description": "User ID",
            "nullable": true
          },
          "isControlUser": {
            "type": "boolean",
            "description": "Is this user a control",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationMessageCode": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "Field",
            "nullable": true
          },
          "code": {
            "type": "string",
            "description": "Code",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VeterinaryInformation": {
        "type": "object",
        "properties": {
          "establishmentsOfOriginExternalReference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalReference"
              }
            ],
            "description": "External reference of approved establishments, which relates to a downstream service",
            "nullable": true
          },
          "establishmentsOfOrigins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApprovedEstablishment"
            },
            "description": "List of establishments which were approved by UK to issue veterinary documents",
            "nullable": true
          },
          "veterinaryDocument": {
            "type": "string",
            "description": "Veterinary document identification",
            "nullable": true
          },
          "veterinaryDocumentIssuedOn": {
            "type": "string",
            "description": "Veterinary document issue date",
            "nullable": true
          },
          "accompanyingDocumentNumbers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Additional documents",
            "nullable": true
          },
          "accompanyingDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccompanyingDocument"
            },
            "description": "Accompanying documents",
            "nullable": true
          },
          "catchCertificateAttachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CatchCertificateAttachment"
            },
            "description": "Catch certificate attachments",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "oAuth": {
        "type": "oauth2",
        "description": "RFC8725 Compliant JWT",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://localhost/oauth2/token",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    {
      "oAuth": [ ]
    }
  ],
  "tags": [
    {
      "name": "Import Notifications",
      "description": "Get updated import notifications for a PHA"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Endpoints",
      "tags": [
        "Import Notifications"
      ]
    }
  ]
}